package com.titansmasher.taptitansoptimiser.Models.RawSave;

import com.titansmasher.taptitansoptimiser.Helpers.GenericHelpers;
import com.titansmasher.taptitansoptimiser.Models.RawSave.AbilityClasses.AbilitySave;
import com.titansmasher.taptitansoptimiser.Models.RawSave.ArtifactClasses.ArtifactLevels;
import com.titansmasher.taptitansoptimiser.Models.RawSave.ArtifactClasses.ArtifactRelics;
import com.titansmasher.taptitansoptimiser.Models.RawSave.HeroClasses.HeroSave;
import com.titansmasher.taptitansoptimiser.Models.RawSave.TrophyClasses.TrophyProgressSave;

import org.json.JSONObject;

import java.util.Date;
import java.util.UUID;

/**
 * Created by Danny on 19/10/2016.
 */

public class PlayerInfoSave {

    public UUID playerId;
    public String friendCode;
    public int cleanMasterDiamonds;
    public int playerLevel;
    public int playerLevelGirl;
    public Date lastActiveTime;
    public Date lastActiveTimeGirl;
    public double playerGold;
    public double playerGoldGirl;
    public int playerRelics;
    public int playerRelicsGirl;
    public int playerDiamonds;
    public boolean hasOfflineGold;
    public boolean skipOfflineGold;
    public int currentStage;
    public int currentStageGirl;
    public int unlockedStage;
    public int unlockedStageGirl;
    public int killsInWave;
    public int killsInWaveGirl;
    public boolean beenToLatestStage;
    public boolean beenToLatestStageGirl;
    public boolean signedIntoSocial;
    public boolean shouldAskToSignInSocial;
    public String socialId;
    public ArtifactLevels artifactLevels;
    public HeroSave heroSave;
    public AbilitySave abilitySave;
    public ArtifactRelics artifactRelicsSpent;
    public boolean artifactRelicsSpentFixed;
    public int nextArtifactSeed;
    public int nextArtifactSeedGirl;
    public TrophyProgressSave trophyProgress;
    public TrophyProgressSave trophyProgressGirl;
    public PowerUpInventory powerUpInventory;
    public boolean cheater;
    public String cheaterReason;
    public int syncCount;
    public double playTimeSinceLastSync;
    public double playTimeSinceLastSyncGirl;
    public double originalTimeOffset;
    public double goldLostToPrestige;
    public double goldLostToPrestigeGirl;
    public double dpsLostToPrestige;
    public double dpsLostToPrestigeGirl;
    public Date lastPrestige;
    public Date lastPrestigeGirl;
    public double uncollectedGold;
    public double uncollectedGoldGirl;
    public int cheatCount;
    public int world;
    public int iapPurchaseCount;
    public double iapSpendingInUSD;
    public int iapApprovedByAppleGoogle;
    public RewardedIAPs allRewardedIAPs;
    public int rewardedCustomerServiceDiamond;
    public int rewardedCustomerServiceRelics;
    public TutorialProgress tutorialProgress;
    public int dungeonsCompleted;
    public int dungeonStage;
    public Date lastDungeonTime;
    public Date lastCompletedDungeonTime;
    public Tournament tournament;
    public Date doubleFairyTime;
    public Inbox readInboxMessages;
    public int tt_language; // language is a built in variable *somewhere*
    public boolean hideTournamentPanel;
    public int gameRating;
    public boolean isLinkedToFacebook;
    public PlayerCustomizations unlockedPlayerCustomizations;
    public PlayerCustomizations currentPlayerCustomizations;
    public Friends friendsModel;
    public String facebookId;
    public int dailyClickMinValue;
    public int music;
    public int sound;
    public boolean pushNotifications;
    public boolean calculatorMode;
    public boolean optionsAutoAdvance;
    public boolean optionsAutoAdvanceGirl;
    public boolean optionsAutoAdvanceBoy;
    public boolean hasRatedGame;
    public boolean seenOfflineGoldPanel;
    public boolean likedFacebook;
    public boolean followedTwitter;
    public String playerName;
    public String playerNameGirl;
    public boolean optionsFairyVideo;
    public boolean optionsMultiplayerEnabled;
    public int optionsPerformance;
    public boolean hasOpenedFriendsPanel;
    public String backupIAPProductIdentifier;
    public String backupIAPBase64EncodedTransactionReceipt;
    public String lastSavedVersion;
    public boolean firstPurchaseMsgShown;
    public Date lastCloudSaveTime;
    public Date lastClickPeriod;
    public boolean hasCloudSaveEverSynced;
    public boolean canDoSeason2;
    public boolean drunkenHammerRewardeReceived;
    public boolean isDeveloper;
    public String firstVersionInstalled;
    public String oniixTransferKey;
    public String superPrestige;
    public int activeTime;

    public PlayerInfoSave(JSONObject obj) {
        if (obj == null) {
            populateFromNull();
            return;
        }

        this.playerId = UUID.fromString(GenericHelpers.getStringSafe(obj, "playerID"));
        this.friendCode = GenericHelpers.getStringSafe(obj, "friendCode");
        this.cleanMasterDiamonds = GenericHelpers.getIntSafe(obj, "cleanMasterDiamonds");
        this.playerLevel = GenericHelpers.getIntSafe(obj, "playerLevel");
        this.playerLevelGirl = GenericHelpers.getIntSafe(obj, "playerLevelGirl");
        this.lastActiveTime = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastActiveTime"));
        this.lastActiveTimeGirl = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastActiveTimeGirl"));
        this.playerGold = GenericHelpers.getDoubleSafe(obj, "playerGold");
        this.playerGoldGirl = GenericHelpers.getDoubleSafe(obj, "playerGoldGirl");
        this.playerRelics = GenericHelpers.getIntSafe(obj, "playerRelics");
        this.playerRelicsGirl = GenericHelpers.getIntSafe(obj, "playerRelicsGirl");
        this.playerDiamonds = GenericHelpers.getIntSafe(obj, "playerDiamonds");
        this.hasOfflineGold = GenericHelpers.getBooleanSafe(obj, "hasOfflineGold", false);
        this.skipOfflineGold = GenericHelpers.getBooleanSafe(obj, "skipOfflineGold", false);
        this.currentStage = GenericHelpers.getIntSafe(obj, "currentStage");
        this.currentStageGirl = GenericHelpers.getIntSafe(obj, "currentStageGirl");
        this.unlockedStage = GenericHelpers.getIntSafe(obj, "unlockedStage");
        this.unlockedStageGirl = GenericHelpers.getIntSafe(obj, "unlockedStageGirl");
        this.killsInWave = GenericHelpers.getIntSafe(obj, "killsInWave");
        this.killsInWaveGirl = GenericHelpers.getIntSafe(obj, "killsInWaveGirl");
        this.beenToLatestStage = GenericHelpers.getBooleanSafe(obj, "beenToLatestStage", true);
        this.beenToLatestStageGirl = GenericHelpers.getBooleanSafe(obj, "beenToLatestStageGirl", true);
        this.signedIntoSocial = GenericHelpers.getBooleanSafe(obj, "signedIntoSocial", false);
        this.shouldAskToSignInSocial = GenericHelpers.getBooleanSafe(obj, "shouldAskToSignInSocial", false);
        this.socialId = GenericHelpers.getStringSafe(obj, "socialId");
        this.heroSave = new HeroSave(GenericHelpers.getJSONObjectSafe(obj, "heroSave"));
        this.abilitySave = new AbilitySave(GenericHelpers.getJSONObjectSafe(obj, "skillSave"));
        this.artifactRelicsSpentFixed = GenericHelpers.getBooleanSafe(obj, "artifactRelicsSpentFixed", true);
        this.nextArtifactSeed = GenericHelpers.getIntSafe(obj, "nextArtifactSeed");
        this.nextArtifactSeedGirl = GenericHelpers.getIntSafe(obj, "nextArtifactSeedGirl");
        this.cheater = GenericHelpers.getBooleanSafe(obj, "cheater", false);
        this.cheaterReason = GenericHelpers.getStringSafe(obj, "cheaterReason");
        this.syncCount = GenericHelpers.getIntSafe(obj, "syncCount");
        this.playTimeSinceLastSync = GenericHelpers.getDoubleSafe(obj, "playTimeSinceLastSync");
        this.playTimeSinceLastSyncGirl = GenericHelpers.getDoubleSafe(obj, "playTimeSinceLastSyncGirl");
        this.originalTimeOffset = GenericHelpers.getDoubleSafe(obj, "originalTimeOffset");
        this.goldLostToPrestige = GenericHelpers.getDoubleSafe(obj, "goldLostToPrestige");
        this.goldLostToPrestigeGirl = GenericHelpers.getDoubleSafe(obj, "goldLostToPrestigeGirl");
        this.dpsLostToPrestige = GenericHelpers.getDoubleSafe(obj, "dpsLostToPrestige");
        this.dpsLostToPrestigeGirl = GenericHelpers.getDoubleSafe(obj, "dpsLostToPrestigeGirl");
        this.lastPrestige = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastPrestige"));
        this.lastPrestigeGirl = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastPrestigeGirl"));
        this.uncollectedGold = GenericHelpers.getDoubleSafe(obj, "uncollectedGold");
        this.uncollectedGoldGirl = GenericHelpers.getDoubleSafe(obj, "uncollectedGoldGirl");
        this.cheatCount = GenericHelpers.getIntSafe(obj, "cheatCount");
        this.world = GenericHelpers.getIntSafe(obj, "world");
        this.iapPurchaseCount = GenericHelpers.getIntSafe(obj, "iapPurchaseCount");
        this.iapSpendingInUSD = GenericHelpers.getDoubleSafe(obj, "iapSpendingInUSD");
        this.iapApprovedByAppleGoogle = GenericHelpers.getIntSafe(obj, "iapApprovedByAppleGoogle");
        this.rewardedCustomerServiceDiamond = GenericHelpers.getIntSafe(obj, "rewardedCustomerServiceDiamond");
        this.rewardedCustomerServiceRelics = GenericHelpers.getIntSafe(obj, "rewardedCustomerServiceRelics");
        this.dungeonsCompleted = GenericHelpers.getIntSafe(obj, "dungeonsCompleted");
        this.dungeonStage = GenericHelpers.getIntSafe(obj, "dungeonStage");
        this.lastDungeonTime = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastDungeonTime"));
        this.lastCompletedDungeonTime = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastCompletedDungeonTime"));
        this.tournament = new Tournament(GenericHelpers.getJSONObjectSafe(obj, "tournament"));
        this.doubleFairyTime = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "doubleFairyTime"));
        this.readInboxMessages = new Inbox(GenericHelpers.getJSONObjectSafe(obj, "readInboxMessages"));
        this.tt_language = GenericHelpers.getIntSafe(obj, "language");
        this.hideTournamentPanel = GenericHelpers.getBooleanSafe(obj, "hideTournamentPanel", false);
        this.gameRating = GenericHelpers.getIntSafe(obj, "gameRating");
        this.isLinkedToFacebook = GenericHelpers.getBooleanSafe(obj, "isLinkedToFacebook", false);
        this.unlockedPlayerCustomizations = new PlayerCustomizations(GenericHelpers.getStringSafe(obj, "unlockedPlayerCustomizations"));
        this.currentPlayerCustomizations = new PlayerCustomizations(GenericHelpers.getStringSafe(obj, "currentPlayerCustomizations"));
        this.friendsModel = new Friends(GenericHelpers.getJSONObjectSafe(obj, "friendsModel"));
        this.facebookId = GenericHelpers.getStringSafe(obj, "facebookId");
        this.dailyClickMinValue = GenericHelpers.getIntSafe(obj, "dailyClickMinValue");
        this.music = GenericHelpers.getIntSafe(obj, "music");
        this.sound = GenericHelpers.getIntSafe(obj, "sound");
        this.pushNotifications = GenericHelpers.getBooleanSafe(obj, "pushNotifications", false);
        this.calculatorMode = GenericHelpers.getBooleanSafe(obj, "calculatorMode", false);
        this.optionsAutoAdvance = GenericHelpers.getBooleanSafe(obj, "optionsAutoAdvance", false);
        this.optionsAutoAdvanceGirl = GenericHelpers.getBooleanSafe(obj, "optionsAutoAdvanceGirl", false);
        this.optionsAutoAdvanceBoy = GenericHelpers.getBooleanSafe(obj, "optionsAutoAdvanceBoy", false);
        this.hasRatedGame = GenericHelpers.getBooleanSafe(obj, "hasRatedGame", false);
        this.seenOfflineGoldPanel = GenericHelpers.getBooleanSafe(obj, "seenOfflineGoldPanel", false);
        this.likedFacebook = GenericHelpers.getBooleanSafe(obj, "likedFacebook", false);
        this.followedTwitter = GenericHelpers.getBooleanSafe(obj, "followedTwitter", false);
        this.playerName = GenericHelpers.getStringSafe(obj, "playerName");
        this.playerNameGirl = GenericHelpers.getStringSafe(obj, "playerNameGirl");
        this.optionsFairyVideo = GenericHelpers.getBooleanSafe(obj, "optionsFairyVideo", true);
        this.optionsMultiplayerEnabled = GenericHelpers.getBooleanSafe(obj, "optionsMultiplayerEnabled", false);
        this.optionsPerformance = GenericHelpers.getIntSafe(obj, "optionsPerformance");
        this.hasOpenedFriendsPanel = GenericHelpers.getBooleanSafe(obj, "hasOpenedFriendsPanel", false);
        this.backupIAPProductIdentifier = GenericHelpers.getStringSafe(obj, "backupIAPProductIdentifier");
        this.backupIAPBase64EncodedTransactionReceipt = GenericHelpers.getStringSafe(obj, "backupIAPBase64EncodedTransactionReceipt");
        this.lastSavedVersion = GenericHelpers.getStringSafe(obj, "lastSavedVersion");
        this.firstPurchaseMsgShown = GenericHelpers.getBooleanSafe(obj, "firstPurchaseMsgShown", true);
        this.lastCloudSaveTime = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastCloudSaveTime"));
        this.lastClickPeriod = GenericHelpers.parseDateSafe("MM/dd/yyyy HH:mm:ss", GenericHelpers.getStringSafe(obj, "lastClickPeriod"));
        this.hasCloudSaveEverSynced = GenericHelpers.getBooleanSafe(obj, "hasCloudSaveEverSynced", false);
        this.canDoSeason2 = GenericHelpers.getBooleanSafe(obj, "canDoSeason2", false);
        this.drunkenHammerRewardeReceived = GenericHelpers.getBooleanSafe(obj, "drunkenHammerRewardeReceived", false);
        this.isDeveloper = GenericHelpers.getBooleanSafe(obj, "isDeveloper", false);
        this.firstVersionInstalled = GenericHelpers.getStringSafe(obj, "firstVersionInstalled");
        this.oniixTransferKey = GenericHelpers.getStringSafe(obj, "oniixTransferKey");
        this.superPrestige = GenericHelpers.getStringSafe(obj, "superPrestige");
        this.activeTime = GenericHelpers.getIntSafe(obj, "activeTime");
        this.trophyProgress = new TrophyProgressSave(GenericHelpers.getJSONObjectSafe(obj, "trophyProgress"));
        this.trophyProgressGirl = new TrophyProgressSave(GenericHelpers.getJSONObjectSafe(obj, "trophyProgressGirl"));
        this.artifactLevels = new ArtifactLevels(GenericHelpers.getJSONObjectSafe(obj, "artifactLevels"));
        this.artifactRelicsSpent = new ArtifactRelics(GenericHelpers.getJSONObjectSafe(obj, "artifactRelicsSpent"));
        this.powerUpInventory = new PowerUpInventory(GenericHelpers.getJSONObjectSafe(obj, "powerUpInventory"));
        this.allRewardedIAPs = new RewardedIAPs(GenericHelpers.constructJSONObjectSafe(GenericHelpers.getStringSafe(obj, "allRewardedIAPs")));
        this.tutorialProgress = new TutorialProgress(GenericHelpers.getJSONObjectSafe(obj, "tutorialProgress"));
    }

    private void populateFromNull() {
        this.playerId = UUID.fromString("00000000-0000-0000-0000-000000000000");
        this.friendCode = "";
        this.cleanMasterDiamonds = 0;
        this.playerLevel = 0;
        this.playerLevelGirl = 0;
        this.lastActiveTime = new Date(0);
        this.lastActiveTimeGirl = new Date(0);
        this.playerGold = 0;
        this.playerGoldGirl = 0;
        this.playerRelics = 0;
        this.playerRelicsGirl = 0;
        this.playerDiamonds = 0;
        this.hasOfflineGold = false;
        this.skipOfflineGold = false;
        this.currentStage = 0;
        this.currentStageGirl = 0;
        this.unlockedStage = 0;
        this.unlockedStageGirl = 0;
        this.killsInWave = 0;
        this.killsInWaveGirl = 0;
        this.beenToLatestStage = false;
        this.beenToLatestStageGirl = false;
        this.signedIntoSocial = false;
        this.shouldAskToSignInSocial = false;
        this.socialId = "";
        this.heroSave = new HeroSave(null);
        this.abilitySave = new AbilitySave(null);
        this.artifactRelicsSpentFixed = true;
        this.nextArtifactSeed = 0;
        this.nextArtifactSeedGirl = 0;
        this.cheater = false;
        this.cheaterReason = "";
        this.syncCount = 0;
        this.playTimeSinceLastSync = 0;
        this.playTimeSinceLastSyncGirl = 0;
        this.originalTimeOffset = 0;
        this.goldLostToPrestige = 0;
        this.goldLostToPrestigeGirl = 0;
        this.dpsLostToPrestige = 0;
        this.dpsLostToPrestigeGirl = 0;
        this.lastPrestige = new Date(0);
        this.lastPrestigeGirl = new Date(0);
        this.uncollectedGold = 0;
        this.uncollectedGoldGirl = 0;
        this.cheatCount = 0;
        this.world = 0;
        this.iapPurchaseCount = 0;
        this.iapSpendingInUSD = 0;
        this.iapApprovedByAppleGoogle = 0;
        this.rewardedCustomerServiceDiamond = 0;
        this.rewardedCustomerServiceRelics = 0;
        this.dungeonsCompleted = 0;
        this.dungeonStage = 0;
        this.lastDungeonTime = new Date(0);
        this.lastCompletedDungeonTime = new Date(0);
        this.tournament = new Tournament(null);
        this.doubleFairyTime = new Date(0);
        this.readInboxMessages = new Inbox(null);
        this.tt_language = 0;
        this.hideTournamentPanel = false;
        this.gameRating = 0;
        this.isLinkedToFacebook = false;
        this.unlockedPlayerCustomizations = new PlayerCustomizations(null);
        this.currentPlayerCustomizations = new PlayerCustomizations(null);
        this.friendsModel = new Friends(null);
        this.facebookId = "";
        this.dailyClickMinValue = 0;
        this.music = 0;
        this.sound = 0;
        this.pushNotifications = false;
        this.calculatorMode = false;
        this.optionsAutoAdvance = false;
        this.optionsAutoAdvanceGirl = false;
        this.optionsAutoAdvanceBoy = false;
        this.hasRatedGame = false;
        this.seenOfflineGoldPanel = false;
        this.likedFacebook = false;
        this.followedTwitter = false;
        this.playerName = "Sword Master";
        this.playerNameGirl = "Spell Master";
        this.optionsFairyVideo = true;
        this.optionsMultiplayerEnabled = false;
        this.optionsPerformance = 0;
        this.hasOpenedFriendsPanel = false;
        this.backupIAPProductIdentifier = "";
        this.backupIAPBase64EncodedTransactionReceipt = "";
        this.lastSavedVersion = "0.0";
        this.firstPurchaseMsgShown = false;
        this.lastCloudSaveTime = new Date(0);
        this.lastClickPeriod = new Date(0);
        this.hasCloudSaveEverSynced = false;
        this.canDoSeason2 = false;
        this.drunkenHammerRewardeReceived = false;
        this.isDeveloper = false;
        this.firstVersionInstalled = "0.0";
        this.oniixTransferKey = "";
        this.superPrestige = "";
        this.activeTime = 0;
        this.trophyProgress = new TrophyProgressSave(null);
        this.trophyProgressGirl = new TrophyProgressSave(null);
        this.artifactLevels = new ArtifactLevels(null);
        this.artifactRelicsSpent = new ArtifactRelics(null);
        this.powerUpInventory = new PowerUpInventory(null);
        this.allRewardedIAPs = new RewardedIAPs(null);
    }
}
