package com.titansmasher.taptitansoptimiser.Models.Enums;

import com.titansmasher.taptitansoptimiser.Helpers.ArrayListConstructor;
import com.titansmasher.taptitansoptimiser.Helpers.HashMapConstructor;
import com.titansmasher.taptitansoptimiser.Models.Skill;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * Created by Danny on 21/10/2016.
 */

public enum Hero {
    Takeda ("Takeda the Blade Assassin", 1, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)50).add(World.WORLD_2, (double)36).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(50,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(100,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(25,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(100,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(200, Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10, Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10, Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(1000, Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20, Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(50000, Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Contessa("Contessa the Torch Wielder", 2, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)175).add(World.WORLD_2, (double)140).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(100,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(6,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(30000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Hornetta("Hornetta, Queen of the Valrunes", 3, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)674).add(World.WORLD_2, (double)1.12e3).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(150,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(1,  Effect.CRIT_CHANCE)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(1,  Effect.CRIT_CHANCE)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Mila("Mila the Hammer Stomper", 4, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)2.85e3).add(World.WORLD_2, (double)6.72e3).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(100,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(800,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(6,  Effect.GOLD_HEROSKILLS)).add(new Skill(500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(150,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(600,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(25,  Effect.CHEST_HEROSKILLS)).getList()).getMap()),
    Terra("Terra the Land Scorcher", 5, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)13.30e3).add(World.WORLD_2, (double)60.63e3).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(17,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(88000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Inquisireaux("Inquisireaux the Terrible", 6, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)68.10e3).add(World.WORLD_2, (double)423e3).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(700,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(230,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(777,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(65000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Charlotte("Charlotte the Special", 7, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)384.00e3).add(World.WORLD_2, (double)5.08e6).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(7,  Effect.BOSS_DAMAGE)).add(new Skill(600,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(550,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(7,  Effect.BOSS_DAMAGE)).add(new Skill(1600,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Jordaan("Jordaan, Knight of Mini", 8, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)2.38e6).add(World.WORLD_2, (double)20.29e6).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(1900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(480,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).add(new Skill(25,  Effect.CHEST_HEROSKILLS)).add(new Skill(8500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Jukka("Jukka, Master of Axes", 9, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)23.80e6).add(World.WORLD_2, (double)102e6).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(150,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(5000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(25,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(9000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(25,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(58000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Milo("Milo and Clonk-Clonk", 10, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)143.00e6).add(World.WORLD_2, (double)610e6).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(150,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1,  Effect.CRIT_CHANCE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(25,  Effect.CHEST_HEROSKILLS)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(220,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1,  Effect.CRIT_CHANCE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(9900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Macelord("Macelord the Ruthless", 11, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)943.00e6).add(World.WORLD_2, (double)6.09e9).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(850,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(3800,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1400,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(1,  Effect.CRIT_CHANCE)).add(new Skill(67600,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Gertrude("Gertrude the Goat Rider", 12, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)6.84e9).add(World.WORLD_2, (double)18.29e9).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(7,  Effect.BOSS_DAMAGE)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(7,  Effect.BOSS_DAMAGE)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).getList()).getMap()),
    Twitterella("Twitterella the Tweeter", 13, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)54.70e9).add(World.WORLD_2, (double)73.2e9).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(150,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(850,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(12000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(280,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(7,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(55500,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    MasterHawk("Master Hawk, Lord of Luft", 14, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)8200e9).add(World.WORLD_2, (double)1.1e12).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1100,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(400,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1100,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(400,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).getList()).getMap()),
    Elpha("Elpha, Wielder of Gems", 15, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)8.20e12).add(World.WORLD_2, (double)11e12).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(40,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(15,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(800,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(40,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(15,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(78000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Poppy("Poppy, Daughter of Ceremony", 16, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)164.00e12).add(World.WORLD_2, (double)274e12).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(350,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(25,  Effect.CHEST_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(7,  Effect.BOSS_DAMAGE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(350,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(25,  Effect.CHEST_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(7,  Effect.BOSS_DAMAGE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Skulptor("Skulptor, Protector of Bridges", 17, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)1.64e15).add(World.WORLD_2, (double)2.19e15).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(150,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(25,  Effect.GOLD_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(270,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(25,  Effect.GOLD_HEROSKILLS)).getList()).getMap()),
    Sterling("Sterling the Enchantor", 18, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)49.20e15).add(World.WORLD_2, (double)98.8e15).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(400,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(450,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(400,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(3500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Orba("Orba the Foreseer", 19, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)2.46e18).add(World.WORLD_2, (double)5.43e18).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.5,  Effect.TAP_DAMAGE_DPS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(400,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.5,  Effect.TAP_DAMAGE_DPS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Remus("Remus the Noble Archer", 20, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)73.80e18).add(World.WORLD_2, (double)81.49e18).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(600,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(450,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(2800,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).getList()).getMap()),
    Mikey("Mikey the Magician Apprentice", 21, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)2.44e21).add(World.WORLD_2, (double)2.6e21).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(73000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Peter("Peter Pricker the Prickly Poker", 22, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)244.00e21).add(World.WORLD_2, (double)289e21).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(750,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(250,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1050,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(4000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Tom("Teeny Tom, Keeper of the Castle", 23, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)48.70e24).add(World.WORLD_2, (double)64.2e24).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(800,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(20,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(10000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(800,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(20,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(75000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Deznis("Deznis the Cleanser", 24, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)1950e27).add(World.WORLD_2, (double)21.4e27).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(9000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(8000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).add(new Skill(88000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Hamlette("Hamlette, Painter of Skulls", 25, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)21.40e30).add(World.WORLD_2, (double)23.49e30).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(15000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(15000,  Effect.INDIVIDUAL_HERO_DAMAGE)).getList()).getMap()),
    Eistor("Eistor the Banisher", 26, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)2.36e36).add(World.WORLD_2, (double)2.81e36).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(350,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(650,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(12,  Effect.GOLD_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(350,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(999,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(0.4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(12,  Effect.GOLD_HEROSKILLS)).getList()).getMap()),
    Flavius("Flavius and Oinksbjorn", 27, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)25.90e45).add(World.WORLD_2, (double)36.69e45).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(700,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(30,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(300,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(5,  Effect.BOSS_DAMAGE)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(30,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.CHEST_HEROSKILLS)).getList()).getMap()),
    Chester("Chester the Beast Tamer", 28, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)2850e60).add(World.WORLD_2, (double)44.09e60).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(350,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(400,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(600,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(350,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(1500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(3200,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.CRIT_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(15,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Mohacas("Mohacas the Wind Warrior", 29, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)3.14e81).add(World.WORLD_2, (double)4.84e81).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(330,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(550,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.GOLD_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(330,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(600,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.GOLD_HEROSKILLS)).getList()).getMap()),
    Jaqulin("Jaqulin the Unknown", 30, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)3.14e96).add(World.WORLD_2, (double)5.83e106).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(1000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(10,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(4,  Effect.TAP_DAMAGE_DPS)).add(new Skill(20,  Effect.GOLD_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap()),
    Pixie("Pixie the Rebel Fairy", 31, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)3.76e116).add(World.WORLD_2, (double)7.43e136).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(2000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1,  Effect.CRIT_CHANCE)).add(new Skill(60,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(25,  Effect.CHEST_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(900,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(5000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(1,  Effect.CRIT_CHANCE)).add(new Skill(60,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(25,  Effect.CHEST_HEROSKILLS)).add(new Skill(10,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(15,  Effect.GOLD_HEROSKILLS)).getList()).getMap()),
    Jackalope("Jackalope the Fireballer", 32, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)4.14e136).add(World.WORLD_2, (double)9.07e176).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(40,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(25,  Effect.GOLD_HEROSKILLS)).add(new Skill(60,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.BOSS_DAMAGE)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(990,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(2000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(25,  Effect.GOLD_HEROSKILLS)).add(new Skill(60,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(2,  Effect.CRIT_CHANCE)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(10,  Effect.BOSS_DAMAGE)).getList()).getMap()),
    DarkLord("Dark Lord, Punisher of All", 33, new HashMapConstructor<World, Double>().add(World.WORLD_1, (double)4.56e156).add(World.WORLD_2, (double)9.99e226).getMap(), new HashMapConstructor<World, List<Skill>>().add( World.WORLD_1, new ArrayListConstructor<Skill>().add(new Skill(2000,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(1,  Effect.TAP_DAMAGE_DPS)).add(new Skill(25,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(40,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).add(World.WORLD_2, new ArrayListConstructor<Skill>().add(new Skill(2500,  Effect.INDIVIDUAL_HERO_DAMAGE)).add(new Skill(20,  Effect.TAP_DAMAGE_HEROSKILLS)).add(new Skill(1,  Effect.TAP_DAMAGE_DPS)).add(new Skill(25,  Effect.GOLD_HEROSKILLS)).add(new Skill(20,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(30,  Effect.ALL_DAMAGE_HEROSKILLS)).add(new Skill(40,  Effect.ALL_DAMAGE_HEROSKILLS)).getList()).getMap());

    public String heroName;
    public int heroId;
    public Map<World, Double> cost;
    public Map<World, List<Skill>> skills;

    public static final int EVOLVE = 1000;
    public static final double HERO_UPGRADE_SCALING = 1.075;

    Hero(String name, int id, Map<World, Double> cost, Map<World, List<Skill>> skills) {
        this.heroName = name;
        this.heroId = id;
        this.cost = cost;
        this.skills = skills;
    }

    public Hero getHero(int id){
        for (Hero hero :
                Hero.values()) {
            if (hero.heroId == id)
                return hero;
        }
        return null;
    }

    public List<Skill> getSkills(World world, int level){
        int skillLevels = unlockedSkills(world, level);
        return this.skills.get(world).subList(0, skillLevels);
    }

    public double getBaseDPS(World world, int level){
        double cost = getUpgradeCost(world, level);

        if (level > EVOLVE){
            return Math.min(Math.pow(0.904, level - EVOLVE - 1)* Math.pow(0.715, this.heroId + 33), Double.MAX_VALUE)
                    * (Math.pow(1.075, level - EVOLVE) - 1)
                    * cost
                    / 0.75;
        } else {
            return Math.min(Math.pow(0.904, level - 1)* Math.pow(1 - (0.019 *  Math.min(15, this.heroId)), this.heroId), Double.MAX_VALUE)
                    * (Math.pow(1.075, level) - 1)
                    * cost
                    / 0.75;
        }
    }

    public double getUpgradeCost(World world, int level){
        if (level < EVOLVE){
            return (this.cost.get(world) * 10) * Math.pow(HERO_UPGRADE_SCALING, level);
        }
        return this.cost.get(world) * Math.pow(HERO_UPGRADE_SCALING, level);
    }

    public static int unlockedSkills(World world, int level){
        List<Integer> skillLevels = new ArrayList<>();
        switch (world){
            case WORLD_1:
                skillLevels = new ArrayListConstructor<Integer>()
                        .add(10)
                        .add(25)
                        .add(50)
                        .add(100)
                        .add(200)
                        .add(400)
                        .add(800)
                        .getList();
            case WORLD_2:
                skillLevels = new ArrayListConstructor<Integer>()
                        .add(10)
                        .add(30)
                        .add(60)
                        .add(100)
                        .add(200)
                        .add(400)
                        .add(800)
                        .getList();
        }
        if (skillLevels.size() == 0)
            return 0;
        if (level > EVOLVE){
            level = level - EVOLVE;
        }
        int count = 0;
        for (int skillLevel
                :skillLevels){
            if (skillLevel > level)
                return count;
            count++;
        }
        return count;
    }

    public double getHeroDamageBonus(World world, int level){
        List<Skill> skills = this.getSkills(world, level);
        double multiplier = 0;
        for (Skill skill :
                skills) {
            if (skill.effect == Effect.INDIVIDUAL_HERO_DAMAGE) {
                multiplier += skill.value;
            }
        }
        return multiplier / 100;
    }

}
